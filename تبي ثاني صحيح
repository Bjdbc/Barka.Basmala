#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// وظيفة لتحميل سلسلة نصية من المستخدم
// تقوم هذه الوظيفة بإنشاء سلسلة نصية ديناميكيًا باستخدام malloc، ثم تطلب إدخال النص من المستخدم.
char *ChargerChaine(int N) {
    char *chaine = (char*)malloc(N+1); // تخصيص ذاكرة ديناميكية بحجم N+1 (لإضافة الحرف '\0' في النهاية).
    printf("Veuillez saisir la chaine:\n"); // طلب إدخال السلسلة النصية من المستخدم.
    fgets(chaine, N, stdin); // قراءة النص المدخل بحد أقصى N حرفًا.
    chaine[strcspn(chaine, "\n")] = '\0'; // إزالة الحرف '\n' الذي قد يُضاف في نهاية النص.
    return chaine; // إعادة النص الذي أدخله المستخدم.
}

// وظيفة لحساب طول السلسلة النصية
// تقوم بحساب طول النص باستخدام دالة المكتبة strlen.
int Longueur(char *ch) {
    return strlen(ch); // تُعيد طول النص كعدد الحروف.
}

// وظيفة لنسخ محتوى سلسلة نصية إلى مصفوفة
// تقوم هذه الوظيفة بنسخ النص من المؤشر إلى مصفوفة باستخدام strcpy.
void ChargerTab(char *p, char Tab[]) {
    strcpy(Tab, p); // نسخ النص من المؤشر p إلى المصفوفة Tab.
}

// وظيفة لعكس محتوى مصفوفة النصوص
// تقوم بعكس ترتيب الأحرف في المصفوفة الأصلية وتخزينها في مصفوفة جديدة.
void InverserTab(char Tab[], char T[], int m) {
    for (int i = 0; i < m; i++) { 
        T[i] = Tab[m-i-1]; // وضع الحرف الأخير من Tab كأول حرف في T وهكذا.
    }
}

// وظيفة لعرض محتوى مصفوفة النصوص
// تقوم هذه الوظيفة بطباعة جميع أحرف المصفوفة واحدًا تلو الآخر.
void AfficherTab(char Tab[], int m) {
    for (int i = 0; i < m; i++) { 
        printf("%c", Tab[i]); // طباعة كل حرف في المصفوفة.
    }
    printf("\n"); // الانتقال إلى السطر الجديد بعد الطباعة.
}

// البرنامج الرئيسي
int main() {
    int n; // متغير لتخزين الحجم الأقصى للنص.
    printf("Veuillez saisir la taille maximale de la chaine:\n"); // طلب إدخال الحجم الأقصى للنص.
    scanf("%d", &n); // قراءة الحجم من المستخدم.
    getchar(); // استهلاك الحرف الجديد المتبقي في التدفق بعد إدخال الرقم.

    char *ch = ChargerChaine(n); // استدعاء الوظيفة لتحميل النص بحجم n.
    int m = Longueur(ch); // حساب طول النص باستخدام الوظيفة Longueur.
    char Tab[m], T[m]; // تعريف مصفوفتين: Tab لتخزين النص الأصلي وT لتخزين النص العكسي.
    ChargerTab(ch, Tab); // نسخ النص المدخل إلى المصفوفة Tab.
    printf("La chaine originale: \n"); // طباعة رسالة للإشارة إلى عرض النص الأصلي.
    AfficherTab(Tab, m); // عرض النص الأصلي باستخدام AfficherTab.
    InverserTab(Tab, T, m); // عكس النص الأصلي وتخزين النتيجة في T.
    printf("La chaine inversée:\n"); // طباعة رسالة للإشارة إلى عرض النص العكسي.
    AfficherTab(T, m); // عرض النص العكسي باستخدام AfficherTab.
    free(ch); // تحرير الذاكرة المخصصة ديناميكيًا للنص.
    return 0; // إن
}
